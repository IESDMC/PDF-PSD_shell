#!/bin/csh

if($#argv != 5) then
  echo
  echo "plot_annual.gmt [sta] [net] [loc] [chan] [year]"
  echo
  exit 1
endif

set plotbin = /home/dmc/QC/PDF/plot/annual/bin

set ddir = /home/dmc/QC/PDF/STATS/$2.$1.$3/$4/Y$5
#set ddir = /home/dmc/pgm/PDF/STATS/$1.$2."02"/$3/Y$4 #for CWB24 HH
set outfile = $2.$1.$3.$4.$5.ps

# on Linux, ndays can be determined by using the "date" command
set ndays = `date +%j --date="$5/12/31"`

psbasemap -JX8.5i/3i -R0/$ndays/-1.301/2 -Bf10a30:"Julian Day":/Swen -K -X1.2i -Y2i > $outfile
#psbasemap -JX8.5i/2.6i -R0/$ndays/-1/2 -Bf10a30:"Julian Day":/Swen -K -X1.2i -Y3i > $outfile

set i = 1
while ( $i <= $ndays )
  set id = `echo $i | awk '{printf "%.03d", $1}'`
  set file = `echo D$id.bin`
  set inpfile = `echo $ddir/$file`
# extract the most probable noise level
  if(-e $inpfile) then
    #echo $file
    $plotbin/prd_db $inpfile
    awk '{print j, $0}' j=$i tmp.out |\
    psxy -JX -R -Ss0.1 -C$plotbin/tpw.cpt -O -K >> $outfile
    /bin/rm -f tmp.out
  endif
  @ i++
end

#psscale -D8.25/1.3/3.2/0.15 -Cbin/tpw.cpt -L -O -K >> $outfile
psscale -D22/3.5/8/0.4 -C$plotbin/tpw.cpt -L -O -K >> $outfile

set title = `echo $1 $2 $3 $4 $5`
pstext -JX -R -N -O -K <<END>> $outfile
182 2.3 24 0 5 2 $title
#182 2.5 24 0 5 2 $1 $2 $3 $4 $5
410 0.27654 16 -90 4 2 10log@-10@-(m@+2@+/s@+4@+)/Hz db
-35 0.27654 24 90 0 2 Period (sec)
END

psxy $plotbin/ticks.dat -JX -R -W2 -M -O -K >> $outfile

pstext -JX -R -N -O <<END>> $outfile
-5  2.0   14 0 0 7 100
-5  1.699 14 0 0 7 50
-5  1.301 14 0 0 7 20
-5  1.0   14 0 0 7 10
-5  0.699 14 0 0 7 5
-5  0.301 14 0 0 7 2
-5  0     14 0 0 7 1
-5 -0.301 14 0 0 7 0.5
-5 -0.699 14 0 0 7 0.2
-5 -1     14 0 0 7 0.1
-5 -1.301 14 0 0 7 0.05
END

set jpg = `echo $outfile | sed "s/.ps/.jpg/g"`
convert -density 150 -rotate 90 -trim $outfile $jpg

#gv $outfile &

